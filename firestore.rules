rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Candidates are publicly readable, admin writable
    match /candidates/{candidateId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.token.admin == true;
      
      // Policies are publicly readable, admin writable
      match /policies/{policyId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null && request.auth.token.admin == true;
      }
    }
    
    // Comments
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.userId &&
        request.resource.data.status == 'active';
      allow update: if request.auth != null && (
        // User can update their own comments
        request.auth.uid == resource.data.userId ||
        // Admin can moderate
        request.auth.token.admin == true
      );
      allow delete: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        request.auth.token.admin == true
      );
    }
    
    // Elections data (read-only for public)
    match /elections/{electionId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Analytics and logs (admin only)
    match /analytics/{document=**} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }
  }
}